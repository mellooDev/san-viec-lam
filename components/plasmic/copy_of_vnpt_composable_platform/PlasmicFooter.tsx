/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 9EC4CuzhysbPvP3VCVkLZh
// Component: 88XNNVHOq8_x

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import { _useGlobalVariants } from "./plasmic"; // plasmic-import: 9EC4CuzhysbPvP3VCVkLZh/projectModule
import { _useStyleTokens } from "./PlasmicStyleTokensProvider"; // plasmic-import: 9EC4CuzhysbPvP3VCVkLZh/styleTokensProvider
import { _useStyleTokens as useStyleTokens_antd_5_hostless } from "../antd_5_hostless/PlasmicStyleTokensProvider"; // plasmic-import: ohDidvG9XsCeFumugENU3J/styleTokensProvider
import { _useStyleTokens as useStyleTokens_library_tailwind_3_4_colors } from "../library_tailwind_3_4_color_tokens/PlasmicStyleTokensProvider"; // plasmic-import: 5ZtnypMovRHeeP3YTdPCYL/styleTokensProvider
import { _useStyleTokens as useStyleTokens_library_tailwind_3_4_number_tokens } from "../library_tailwind_3_4_number_tokens/PlasmicStyleTokensProvider"; // plasmic-import: 4vjRXvnb4XuY6J15w9oRcQ/styleTokensProvider
import { _useStyleTokens as useStyleTokens_plasmic_rich_components } from "../plasmic_rich_components/PlasmicStyleTokensProvider"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/styleTokensProvider

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: 9EC4CuzhysbPvP3VCVkLZh/projectcss
import sty from "./PlasmicFooter.module.css"; // plasmic-import: 88XNNVHOq8_x/css

import ArrowRightIcon from "../library_tabler_3_2_icons/icons/PlasmicIcon__ArrowRight"; // plasmic-import: krIbSfmM1QXM/icon
import FacebookSvgrepoComSvgIcon from "./icons/PlasmicIcon__FacebookSvgrepoComSvg"; // plasmic-import: l30sszYX-Rzn/icon
import BrandYoutubeFilledIcon from "../library_tabler_3_2_icons/icons/PlasmicIcon__BrandYoutubeFilled"; // plasmic-import: AG_OGG3rkr0k/icon
import BrandGoogleFilledIcon from "../library_tabler_3_2_icons/icons/PlasmicIcon__BrandGoogleFilled"; // plasmic-import: NplbeBShTRRh/icon

createPlasmicElementProxy;

export type PlasmicFooter__VariantMembers = {};
export type PlasmicFooter__VariantsArgs = {};
type VariantPropType = keyof PlasmicFooter__VariantsArgs;
export const PlasmicFooter__VariantProps = new Array<VariantPropType>();

export type PlasmicFooter__ArgsType = {};
type ArgPropType = keyof PlasmicFooter__ArgsType;
export const PlasmicFooter__ArgProps = new Array<ArgPropType>();

export type PlasmicFooter__OverridesType = {
  footer?: Flex__<"div">;
};

export interface DefaultFooterProps {
  className?: string;
}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicFooter__RenderFunc(props: {
  variants: PlasmicFooter__VariantsArgs;
  args: PlasmicFooter__ArgsType;
  overrides: PlasmicFooter__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const globalVariants = _useGlobalVariants();

  const styleTokensClassNames = _useStyleTokens();
  const styleTokensClassNames_antd_5_hostless =
    useStyleTokens_antd_5_hostless();
  const styleTokensClassNames_library_tailwind_3_4_colors =
    useStyleTokens_library_tailwind_3_4_colors();
  const styleTokensClassNames_library_tailwind_3_4_number_tokens =
    useStyleTokens_library_tailwind_3_4_number_tokens();
  const styleTokensClassNames_plasmic_rich_components =
    useStyleTokens_plasmic_rich_components();

  return (
    <div
      data-plasmic-name={"footer"}
      data-plasmic-override={overrides.footer}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        styleTokensClassNames,
        styleTokensClassNames_antd_5_hostless,
        styleTokensClassNames_library_tailwind_3_4_colors,
        styleTokensClassNames_library_tailwind_3_4_number_tokens,
        styleTokensClassNames_plasmic_rich_components,
        sty.footer
      )}
    >
      <div className={classNames(projectcss.all, sty.freeBox__prxMr)}>
        <div className={classNames(projectcss.all, sty.freeBox__q2Xja)}>
          <div className={classNames(projectcss.all, sty.freeBox__mPWu)}>
            <div className={classNames(projectcss.all, sty.freeBox___0DSp1)}>
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img___9RzqA)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/copy_of_vnpt_composable_platform/images/framePng.png",
                  fullWidth: 40,
                  fullHeight: 33,
                  aspectRatio: undefined
                }}
              />

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__yZceQ
                )}
              >
                <React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 700 }}
                  >
                    {"S\u00e0n giao d\u1ecbch vi\u1ec7c l\u00e0m Qu\u1ed1c Gia"}
                  </span>
                </React.Fragment>
              </div>
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__rXsv
              )}
            >
              {"V\u1ec1 ch\u00fang t\u00f4i\r"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__pYdr
              )}
            >
              {"Quy ch\u1ebf ho\u1ea1t \u0111\u1ed9ng\r"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__uDuNk
              )}
            >
              {"Quy \u0111\u1ecbnh b\u1ea3o m\u1eadt\r"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__hlhpr
              )}
            >
              {"Tho\u1ea3 thu\u1eadn s\u1eed d\u1ee5ng\r"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__f0RO
              )}
            >
              {"Li\u00ean h\u1ec7\r"}
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox___44Cjd)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__um6Ki
              )}
            >
              {"D\u00e0nh cho Nh\u00e0 tuy\u1ec3n d\u1ee5ng"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__tv8W7
              )}
            >
              {"\u0110\u0103ng tuy\u1ec3n d\u1ee5ng\r"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__x8ALs
              )}
            >
              {"T\u00ecm ki\u1ebfm h\u1ed3 s\u01a1"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__iK40T
              )}
            >
              {"C\u1ea9m nang tuy\u1ec3n d\u1ee5ng"}
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__znIxY)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__e5E45
              )}
            >
              {"D\u00e0nh cho \u1ee9ng vi\u00ean"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__jDoc0
              )}
            >
              {"Vi\u1ec7c l\u00e0m\r"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__i5Pr2
              )}
            >
              {"T\u00ecm vi\u1ec7c l\u00e0m nhanh\r"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__aw6Mm
              )}
            >
              {"C\u00f4ng ty\r"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__bdzUa
              )}
            >
              {"C\u1ea9m Nang Vi\u1ec7c L\u00e0m\r"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__ttIn6
              )}
            >
              {"M\u1eabu CV Xin Vi\u1ec7c\r"}
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__ewHil)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__xWpph
              )}
            >
              {"Vi\u1ec7c l\u00e0m theo khu v\u1ef1c"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__ntL
              )}
            >
              {"H\u1ed3 Ch\u00ed Minh\r"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__wWj6Y
              )}
            >
              {"H\u00e0 N\u1ed9i\r"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__cyu5V
              )}
            >
              {"\u0110\u00e0 N\u1eb5ng\r"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__oHb6
              )}
            >
              {"C\u1ea7n Th\u01a1"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__rsqNb
              )}
            >
              {"H\u1ea3i Ph\u00f2ng\r"}
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__yyWbW)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__t3Zb4
                )}
              >
                {"T\u1ea5t c\u1ea3 khu v\u1ef1c"}
              </div>
              <ArrowRightIcon
                className={classNames(projectcss.all, sty.svg__bZh6E)}
                role={"img"}
              />
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__s4Q4)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___5PZp9
              )}
            >
              {"K\u1ebft n\u1ed1i v\u1edbi S\u00e0n vi\u1ec7c l\u00e0m"}
            </div>
            <div className={classNames(projectcss.all, sty.freeBox___7JMsQ)}>
              <div className={classNames(projectcss.all, sty.freeBox__rKIjh)}>
                <FacebookSvgrepoComSvgIcon
                  className={classNames(projectcss.all, sty.svg___1VK3H)}
                  role={"img"}
                />
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__xJiq4)}>
                <BrandYoutubeFilledIcon
                  className={classNames(projectcss.all, sty.svg__hTcZu)}
                  role={"img"}
                />
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__jl6Sv)}>
                <BrandGoogleFilledIcon
                  className={classNames(projectcss.all, sty.svg__hsvSs)}
                  role={"img"}
                />
              </div>
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__gUihm
              )}
            >
              {"Ch\u1ee9ng nh\u1eadn b\u1edfi"}
            </div>
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__rlr9T)}
              displayHeight={"66px"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"175px"}
              loading={"lazy"}
              src={{
                src: "/plasmic/copy_of_vnpt_composable_platform/images/_4641F3E47Dc18436Ff99867D994Ce9Fa946Ea4F4Png.png",
                fullWidth: 600,
                fullHeight: 227,
                aspectRatio: undefined
              }}
            />
          </div>
        </div>
        <div className={classNames(projectcss.all, sty.freeBox__mwOz5)} />

        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__ufO2
          )}
        >
          {
            "\u00a9 2025 S\u00e0n Giao D\u1ecbch Vi\u1ec7c L\u00e0m Qu\u1ed1c Gia.  All Right Reserved"
          }
        </div>
      </div>
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  footer: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicFooter__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicFooter__VariantsArgs;
    args?: PlasmicFooter__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicFooter__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicFooter__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicFooter__ArgProps,
          internalVariantPropNames: PlasmicFooter__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicFooter__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "footer") {
    func.displayName = "PlasmicFooter";
  } else {
    func.displayName = `PlasmicFooter.${nodeName}`;
  }
  return func;
}

export const PlasmicFooter = Object.assign(
  // Top-level PlasmicFooter renders the root element
  makeNodeComponent("footer"),
  {
    // Helper components rendering sub-elements

    // Metadata about props expected for PlasmicFooter
    internalVariantProps: PlasmicFooter__VariantProps,
    internalArgProps: PlasmicFooter__ArgProps
  }
);

export default PlasmicFooter;
/* prettier-ignore-end */
